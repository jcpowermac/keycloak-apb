- name: Retrieve Service to keycloak
  k8s_v1_service:
    name: '{{ application_name }}'
    namespace: '{{ namespace }}'
  register: keycloak_service_raw

- set_fact:
    keycloak_uri: 'http://{{ keycloak_service_raw.service.spec.cluster_ip }}:{{ keycloak_service_raw.service.spec.ports[0].port}}'

- name: Generate keycloak auth token
  uri:
    url: "{{ keycloak_uri }}/auth/realms/master/protocol/openid-connect/token"
    method: POST
    body: "client_id=admin-cli&username={{ admin_username }}&password={{ admin_password }}&grant_type=password"
    validate_certs: no
  register: keycloak_auth_response
  until: keycloak_auth_response.status == 200
  retries: 20
  delay: 2

- name: Delete client {{ service_name }} in realm {{ namespace }}
  uri:
    url: "{{ keycloak_uri }}/auth/admin/realms/{{ namespace }}/clients/{{ service_name }}"
    method: DELETE
    validate_certs: no
    headers:
      Authorization: "bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 204
    return_content: yes
