---
- name: Generate keycloak auth token
  uri:
    url: "{{ keycloak_uri }}/auth/realms/master/protocol/openid-connect/token"
    method: POST
    body: "client_id=admin-cli&username={{ admin_username }}&password={{ admin_password }}&grant_type=password"
    validate_certs: no
  register: keycloak_auth_response
  until: keycloak_auth_response.status == 200
  retries: 600
  delay: 2

- name: Generate namespace specific realm
  template:
    src: namespace_realm.json.j2
    dest: /tmp/namespace_realm.json

- name: "Create {{ namespace }} realm"
  uri:
    url: "{{ keycloak_uri }}/auth/admin/realms"
    method: POST
    body: "{{ lookup('file','/tmp/namespace_realm.json') }}"
    validate_certs: no
    body_format: json
    headers:
      Authorization: "bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 201

# New encoding task makes admin credentials available to future bind operations
- name: Encode provision credentials
  asb_encode_binding:
    fields:
      admin_username: "{{ admin_username }}"
      admin_password: "{{ admin_password }}"
